networks:
  bridge:
  nginx:
    external: true
    name: nginx

services:

  # Database
  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    volumes:
      - ./database:/var/lib/postgresql/data
    environment:
      POSTGRES_INITDB_ARGS: -g
      POSTGRES_PASSWORD: password
    networks:
      - bridge
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend
  backend:
    build: server
    container_name: backend
    restart: always
    depends_on:
      - postgres
    networks:
      - bridge
      - nginx
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:80/health || exit 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend
  frontend:
    build: app
    container_name: frontend
    restart: always
    depends_on:
      - backend
    networks:
      - bridge
      - nginx
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:80/health || exit 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
